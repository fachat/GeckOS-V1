
/***************** rom build **************************/

stdrom/rom.a65		includes/wraparound to build a complete rom image 
stdrom/oadev.a65	mainly includes, to build devices into the kernel
stdrom/inirom.a65	inirom sets the memory configuration for testing a
			new rom and starts it

/***************** c64 rom build **********************/

c64rom.a65		includes/wraparound to build 'ROM' image for C64
c64def.a65		additional C64 defines
c64dev.a65		device wraparound
c64ds.a65		ACIA 6551 RS232 device driver
c64ds3.a65		Fast RS232 driver for interface by D. Dallmann

/***************** c64 boot files *********************/

loader			BASIC loader to start everything

boot			small Machine Language boot program
boot.a65		source for boot
c64rom			link to 'ROM' image to be loaded
charom			charom to use (needs ASCII, not PETSCII)
			(only lower 4kByte are used)

/***************** defines ****************************/

oadef/oa1con.def	global rom (internal) defines
oadef/oa1fs.def		defines for file access
oadef/oa1str.def	lots of defines, some structs, error codes, 
			hardware descriptions,...

/***************** kernel *****************************/

oa1/oa1.a65		kernel: wraparound/includes
oa1/oa1sj.a65		jumptable / address defines (for include)
oa1/oa1si.a65		bootup: memory test, start rom processes, frequency
			detect; irq/nmi wraparounds (vectors)
oa1/oa1se.a65		kernel entry/exit gates (memsys/memtask), scheduler,
			environment stuff, kill, term, send/receive, fork,
			read, write, setblk, dup,...

oa1/oa1sd.a65		kernel device routines, registering, device irq
oa1/oa1sf.a65		fs manager - dispatch fs messages to registered fs
oa1/oa1sm.a65		memory manager
oa1/oa1ss.a65		stream manager

/***************** stdlib *****************************/

oa1/stdio.a65		std library (runs in user space, is not in kernel
			but from e800 downwards).

/***************** devices ****************************/

oadev/oa1dct.a65	simple centronics/parallel port device
oadev/oa1dnl.a65	kind of /dev/null
oadev/oa1ds.a65		two serial devices for ACIA 6551
oadev/oa1ds3.a65	one serial device for UART 16550A (16 byte FIFO)
oadev/oa1dsp.a65	spooler - serialize output requests
oadev/oa1dt.a65		terminal device - video, keyboard, bell
oadev/oa1std.a65	standard device routines - for new devices
oadev/oa1stds.a65	standard device routines for multiple devices

/***************** user programs ***************************************/

/***************** filesystems ************************/

oafs/fsdev.a65		filesystem for accessing devices
oafs/fsibm.a65		IBM PC fs for drives on csa shugart bus
oafs/fsiec.a65		fs for CBM drives on IEEE 488 interface
oafs/fstst.a65		test fs

/***************** command shell and monitor **********/

oash/sh.a65		shell with i/o redirection, pipes, and more
oash/shdir.a65		file stuff for shell
oash/shmon.a65		machine language monitor for shell

/***************** ibm disk monitor *******************/

ibmon/ibmon.a65		disk monitor for IBM PC disks. doesn't work with
ibmon/ibmon.doc		fsibm due to lack of mutex/semaphore

/***************** simulate keyboard for a C64 ********/

keyrom/ky.a65		device to send stream data to a c64, of that the 
keyrom/kyc64_1.a65	keyboard is emulated by dual ported (time sharing)
			ram 

/***************** multicopy **************************/

mcopy/mcopy.a65		multicopy programm - serialize copy commands
			(that are executed by setting up a stream and
			leaving it alone in the shell, thus causing
			performance/resource problems when copying many
			files)

/***************** basic interpreter ******************/

oabasic/oabasic4.a65	extended basic interpreter, running in multitasking
			ported from C64, (c) commodore.
			Not (yet?) running on the C64 under this OS.


