
/****************************************************************************
   
    OS/A65 Version 1.3.3
    Multitasking Operating System for 6502 Computers

    Copyright (C) 1989-1996 Andre Fachat 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

****************************************************************************/


/***************************************************************************/
/*			These defines control the ROM build		   */ 
/*									   */ 

#define   ROM
#define	  C64

/* These are necessary for C64 kernel **************************************/

#define   NOMMU   
#define   NOSYSPORT
#undef 	  CLK2MHZ
#define	  VIDPAGE 14
#define	  SHORTLINE		/* prepare for 40 col screen */

/* These are changeable ****************************************************/

#define	ROMSTART	$8000	/* where the ROM starts */

#define	CLEARMEM	0	/* Clear memory to 0 on boot, C64 only */

/*#define NMIDEV*/
/*#define C64NEEDCIA1*/		/* disables reading CIA1 ICR in kernel -
				   needs to be done in device then, as
				   kernel enables timer irq!! (reading 
				   it causes all flags to be reset!) */
#undef PARALLEL			/* for IEEE488 interface from Commodore 
				   disables serial bus interface! */

#define	C64_BGND_COL 	0
#define	C64_TEXT_COL 	13
#define	C64_BORDER_COL 	13

/***************************************************************************/
/* 			Better not change anything below                   */
/*									   */ 

#include  "oa1str.def"
#include  "oa1fs.def"
#include  "c64def.a65"

#ifdef NOMMU
sysmem    =$800		/* allocated upward, $300-$800 is for kernel */
syszp     =$20		/* allocated upward, below is for kernel */
sysblk    =$1000	/* allocated downward */
#endif


          .word $2000
          *=ROMSTART

#include  "c64dev.a65"
#print *
#include  "oafs\fsdev.a65"
#print *

#define	NOLOOP
#include  "oafs\fsiec.a65"
#print *

#ifdef INCBASIC

#define	BASICEXE $80
#define	BASICDEV 0
#define	BASICSTART $1000
#define	BASICEND   ROMSTART
#include  "oabasic\oabasic4.a65"
#print *
#define	NOSYSFKT

#else

#define	SHEXE $80		/* ROM executable flag */
#define	MONEXE 0		/* ROM executable flag */
#define	SHDEV 0			/* start on device 0 = video1 */
#include  "oash\sh.a65"

#endif	/* INCBASIC */

#define	NOSH
#undef MONEXE
#define	MONEXE $80		/* ROM executable flag */
#undef MONDEV
#define	MONDEV 1		/* start on device 1 = video2 */
#include  "oash\sh.a65"
#undef NOSH
#print *


          .word -1

.dsb $d000-*,<-1
.dsb $1c00, <-1			/* from d000 to ec00 */

/* relocated STDIO to get more space (because I/O is at $d000 */
#define	STDIOADDR	$f000
#include  "stdio.a65"

#print *
          .dsb $f000-*,<-1
          
#include  "oa1con.def" 
#print *
#include  "oa1\oa1.a65"
#print *

