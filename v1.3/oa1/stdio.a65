
#ifdef ROM

          .(

#ifndef NOMMU
-syszp    =$10
-sysmem   =$18
#endif

#echo stdio:
#print syszp 
#print sysmem

xr        =syszp

getc      .(
          stx xr
          ldx #STDIN
          .byt $2c
&fgetc    stx xr
gc1       jsr GETC
          bcc ok
          cmp #E_EOF
          beq ok
          jsr SUSPEND
          jmp gc1
ok        ldx xr
          rts
          .)

crlfout   lda #13
          jsr putc
lfout     lda #10
putc      .(
          stx xr
          pha
          ldx #STDOUT
          bne pc1
&fputc    pha
          stx xr
pc1       jsr PUTC
          bcc ok
          cmp #E_NUL
          beq ok
          jsr SUSPEND
          pla
          pha
          jmp pc1
ok        ldx xr
          pla
          rts
          .)

serbrk    .(
          stx xr
          lda #SC_STAT
          ldx #STDIN
          jsr STRCMD
          ldx xr
          cmp #E_SEMPTY
          beq s3
          sec
          rts
          .)

dezbout   .(
d1        =syszp+1

l1        tay
          sec
          sbc #100
          bcs l1
          lda #0
          sta d1
          tya
l2        tay
          sec
          sbc #10
          bcc l3
          inc d1
          bcs l2
l3        asl d1
          asl d1
          asl d1
          asl d1
          tya
          ora d1          
&hexout  
          pha
          lsr
          lsr
          lsr
          lsr
          jsr nibout
          pla
          and #$0f
nibout    clc
          adc #"0"
          cmp #"9"+1
          bcc nibok
          adc #6
nibok     jmp putc
          .)
          
txtout    .(
tp        =syszp+1

          sta tp
          sty tp+1
          ldy #0
tol       lda (tp),y
          beq tole
          jsr putc
          iny
          bne tol
          inc tp+1
          bne tol
tole &s3  clc
          rts
          .)

#define   PATH_DRV  0
#define   PATH_NAME (PATH_DRV+1)   /* ohne abschliessendes DIRSIGN    */
/*
          .(
len       =syszp
str       =syszp+1

&fopen    tay
          stx len
          jsr GETSTR
          bcs fe
          stx str     
          tya
          ldy len
          ldx #SEND_FM
          jsr SEND
          bcs ffe
          sec
          jsr XRECEIVE
          cmp #1
          bcc fok
ffe       pha
          ldx str
          jsr FRESTR
          pla
fe        cmp #1
fok       rts
          .)
*/        
          .(
zp        =syszp
d         =syszp+2

&usedir   sta zp
          sty zp+1
          lda PCBUF+FS_OPEN_DRV
          bpl ok         ; Laufwerk angegeben, war nix
          
          ldy #PATH_DRV
          lda (zp),y
          sta PCBUF+FS_OPEN_DRV

          ldx #FS_OPEN_NAME
          lda PCBUF,x
          cmp #DIRSIGN   ; Pfad absolut angegeben
          beq ok         ; war auch nix
          
ud2       iny
          lda (zp),y
          bne ud2
          sty d          
ud4       lda PCBUF,x
          beq ud3
          inx
          bne ud4
ud3       inx
          txa
          clc
          adc d
          sta d
          bcs nerr
          tay
ud5       lda PCBUF,x
          sta PCBUF,y
          dey
          dex
          cpx #FS_OPEN_NAME
          bcs ud5
          ldy #PATH_NAME
ud6       lda (zp),y
          sta PCBUF+FS_OPEN_NAME-PATH_NAME,y
          beq ud7
          iny
          bne ud6
ud7       lda #DIRSIGN
          sta PCBUF+FS_OPEN_NAME-PATH_NAME,y
          ldx d
          clc
          rts
nerr      sec
          rts
ok        ldx #FS_OPEN_NAME
ok1       lda PCBUF,x
          beq oke
          inx
          bne ok1
oke       inx
          clc
          rts
          .)
          
          .(
zp        =syszp
d         =syszp+2
maxpath   =syszp+3

&chdir    sta zp
          sty zp+1
          stx maxpath
          lda PCBUF+FS_CMD_DRV
          bmi nodrive
          ldy #PATH_DRV
          cmp (zp),y
          beq nodrive
          sta (zp),y
          iny
          lda #0
          sta (zp),y
nodrive   inc zp
          bne nd1
          inc zp+1
          ldy #0
                         ; Name untersuchen
nd1       ldx #FS_CMD_NAME
          lda PCBUF,x
          bne ndrx       ; kein Name dann Pfad lîschen
          sta (zp),y
          clc
          rts
ndrx
          cmp #DIRSIGN   ; Name beginnt mit DIRSIGN
          bne nd2
          lda #0         ; dann Pfad lîschen
          sta (zp),y
          
nd2a      inx
nd2       lda PCBUF,x    ; weiter Name anschauen
          beq ndr        ; kein Name dann Ende
          cmp #DIRSIGN
          beq nd2a       ; DIRSIGN Åberlesen
          cmp #"."
          bne nameok     ; kein '.' dann ok
          inx
          lda PCBUF,x    ; hier mindestens ein '.'
          beq ndr        ; Null dann Ende
          cmp #DIRSIGN   ; DIRSIGN,
          beq nd2a       ; dann '.' ignorieren
          cmp #"."       ; noch'n Punkt ?
          bne nerrx      ; nein, dann 
          jsr getpos
          ldy d          ; Position des letzten DIRSIGNs
          lda #0
          sta (zp),y     ; lîschen = eine Verzeichnis-Ebene hîher
          beq nd2a       ; (absolut)

nerrx     dex
nameok    jsr getpos     ; y=LÑnge des alten Pfads
          sty d          ; hier Verzeichnis-Name an Pfad anhÑngen
no        iny
          cpy maxpath
          bcs nerr
          lda PCBUF,x
          beq nr
          cmp #DIRSIGN
          beq nr
          sta (zp),y
          inx
          bne no
nr        lda #0
          sta (zp),y
          ldy d
          lda #DIRSIGN   ; alles ok, dann Nullbyte (Ende alter Pfad) mit
          sta (zp),y     ; DIRSIGN Åberschreiben
          lda PCBUF,x    ; Ende des neuen Verzeichnisses
          bne nd2a       ; nein, dann wieder nach oben
ndr       clc
          rts
nerr      sec
          rts
getpos    ldy #0         ; holt y=LÑnge des alten Pfadnamens
          sty d          ; und d=Position des letzten DIRSIGNs
no0       lda (zp),y
          beq no1
          cmp #DIRSIGN
          bne no2
          sty d
no2       iny
          bne no0          
no1       rts
          .)          
           
          .(
zp        =syszp
d         =syszp+2

&getname  sta zp
          sty zp+1
          lda #0
          sta PCBUF+FS_OPEN_NAME
          ldy #<-1
          sty PCBUF+FS_OPEN_DRV
g1        iny
          lda (zp),y
          beq gr
          cmp #" "
          beq g1
          cmp #":"
          beq g1
          cmp #34        ; "
          beq g2
          iny
          lda (zp),y
          dey
          cmp #":"
          bne g2
          lda (zp),y
          cmp #"A"
          bcc g3
          sbc #1
g3        and #$0f
          sta PCBUF+FS_OPEN_DRV
          iny
          iny
g2        dey
          ldx #FS_OPEN_NAME
          bne g2a

&set2name     /* x=iobuf, y=pcbuf */
          sta zp
          sty zp+1
          ldy #<-1
g2a       lda #" "
          sta d
gn1       iny
          lda (zp),y
          beq gn3
          cmp #" "
          beq gn1
          cmp #">"
          beq gn3
          cmp #34   ; "
          bne gn2
          iny
          sta d
gn2       lda (zp),y
          beq gn3
          cmp d
          beq gn3a
          sta PCBUF,x
          inx
          iny
          bne gn2

gn3a      iny
gn3       lda #0
          sta PCBUF,x
          inx
gr        rts
          .)

          .(
assigntab =sysmem
-sysmem   +=10

&assign   bcc assigndrv
          cpx #<-1
          bne a
iniassign
          ldx #0
ai        txa
          sta assigntab,x
          inx
          cpx #10
          bcc ai
          clc
          rts
assigndrv
          pha
          cpx #10
          bcs ae
          lda assigntab,x
          tax
ae        pla
          rts
          
a         cpx #10
          bcs ar
          sta assigntab,x
ar        rts
          .)

-syszp    +=4

#ifndef STDTST
 
          .dsb $e800-*-3*14,<-1
#endif

+Set2name jmp set2name
+Usedir   jmp usedir
+Chdir    jmp chdir
+Getname  jmp getname
+Assign   jmp assign
+Dezbout  jmp dezbout
+Serbrk   jmp serbrk
+Crlfout  jmp crlfout
+Hexout   jmp hexout
+Txtout   jmp txtout
+Putc     jmp putc
+Getc     jmp getc
+Fputc    jmp fputc
+Fgetc    jmp fgetc

#ifndef STDTST
#if *-$e800
#echo Fehler!
ldx ,x
#endif
#endif
#print    syszp
#print    sysmem

          .)

#else

#define   Set2name  $e7d6
#define   Usedir    $e7d9 
#define   Chdir     $e7dc
#define   Getname   $e7df
#define   Assign    $e7e2
#define   Dezbout   $e7e5
#define   Serbrk    $e7e8
#define   Crlfout   $e7eb
#define   Hexout    $e7ee
#define   Txtout    $e7f1
#define   Putc      $e7f4
#define   Getc      $e7f7
#define   Fputc     $e7fa
#define   Fgetc     $e7fd

#endif

